# Multi-Config Test
# Tests the Nix generator's ability to handle multiple build configurations

# Generate Nix files for different configurations
generate-debug:
    -rm -f default.nix
    ../bin/cmake -G Nix -DCMAKE_BUILD_TYPE=Debug .

generate-release:
    -rm -f default.nix
    ../bin/cmake -G Nix -DCMAKE_BUILD_TYPE=Release .

generate-relwithdebinfo:
    -rm -f default.nix
    ../bin/cmake -G Nix -DCMAKE_BUILD_TYPE=RelWithDebInfo .

generate-minsizerel:
    -rm -f default.nix
    ../bin/cmake -G Nix -DCMAKE_BUILD_TYPE=MinSizeRel .

# Test all configurations
test-all: generate-debug test-debug generate-release test-release generate-relwithdebinfo test-relwithdebinfo generate-minsizerel test-minsizerel

# Main test entry point - test all multi-config functionality
run: test-debug test-release test-relwithdebinfo test-minsizerel

test-debug: generate-debug
    @echo "=== Testing Debug configuration ==="
    nix-build -A simple_test && ./result && rm ./result

test-release: generate-release
    @echo "=== Testing Release configuration ==="
    nix-build -A simple_test && ./result && rm ./result

test-relwithdebinfo: generate-relwithdebinfo
    @echo "=== Testing RelWithDebInfo configuration ==="
    nix-build -A simple_test && ./result && rm ./result

test-minsizerel: generate-minsizerel
    @echo "=== Testing MinSizeRel configuration ==="
    nix-build -A simple_test && ./result && rm ./result

# Check configuration-specific generated output
check-debug: generate-debug
    @echo "=== Debug configuration flags ==="
    @grep -E "(buildPhase|Configuration)" default.nix || echo "Configuration info not found"

check-release: generate-release
    @echo "=== Release configuration flags ==="
    @grep -E "(buildPhase|Configuration)" default.nix || echo "Configuration info not found"

# Clean generated files
clean:
    -rm -f default.nix
    -rm -rf CMakeFiles CMakeCache.txt cmake_install.cmake debug release relwithdebinfo minsizerel