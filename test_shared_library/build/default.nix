# Generated by CMake Nix Generator
with import <nixpkgs> {};

let
  # Per-translation-unit derivations
  mylib_lib_c_o = stdenv.mkDerivation {
    name = "lib.o";
    src = ./..;
    buildInputs = [ gcc ];
    dontFixup = true;
    # Configuration: Release
    buildPhase = ''
      gcc -c -Dmylib_EXPORTS -fPIC "lib.c" -o "$out"
    '';
    installPhase = "true"; # No install needed for objects
  };

  versioned_lib_versioned_c_o = stdenv.mkDerivation {
    name = "versioned.o";
    src = ./..;
    buildInputs = [ gcc ];
    dontFixup = true;
    # Configuration: Release
    buildPhase = ''
      gcc -c -Dversioned_lib_EXPORTS -fPIC "versioned.c" -o "$out"
    '';
    installPhase = "true"; # No install needed for objects
  };

  app_main_c_o = stdenv.mkDerivation {
    name = "main.o";
    src = ./..;
    buildInputs = [ gcc ];
    dontFixup = true;
    # Configuration: Release
    buildPhase = ''
      gcc -c  "main.c" -o "$out"
    '';
    installPhase = "true"; # No install needed for objects
  };

  static_helper_helper_c_o = stdenv.mkDerivation {
    name = "helper.o";
    src = ./..;
    buildInputs = [ gcc ];
    dontFixup = true;
    # Configuration: Release
    buildPhase = ''
      gcc -c  "helper.c" -o "$out"
    '';
    installPhase = "true"; # No install needed for objects
  };

  mixed_app_mixed_c_o = stdenv.mkDerivation {
    name = "mixed.o";
    src = ./..;
    buildInputs = [ gcc ];
    dontFixup = true;
    # Configuration: Release
    buildPhase = ''
      gcc -c  "mixed.c" -o "$out"
    '';
    installPhase = "true"; # No install needed for objects
  };


  # Linking derivations
  link_mylib = stdenv.mkDerivation {
    name = "libmylib.so";
    buildInputs = [ gcc ];
    dontUnpack = true;
    objects = [
      mylib_lib_c_o
    ];
    buildPhase = ''
      mkdir -p $out
      gcc -shared $objects -Wl,-rpath,$out/lib -o $out/libmylib.so
    '';
    installPhase = "true"; # No install needed
  };

  link_versioned_lib = stdenv.mkDerivation {
    name = "libversioned_lib.so";
    buildInputs = [ gcc ];
    dontUnpack = true;
    objects = [
      versioned_lib_versioned_c_o
    ];
    buildPhase = ''
      mkdir -p $out
      gcc -shared $objects -Wl,-soname,libversioned_lib.so.1 -Wl,-rpath,$out/lib -o $out/libversioned_lib.so.1.2.3
      ln -sf libversioned_lib.so.1.2.3 $out/libversioned_lib.so.1
      ln -sf libversioned_lib.so.1.2.3 $out/libversioned_lib.so
    '';
    installPhase = "true"; # No install needed
  };

  link_app = stdenv.mkDerivation {
    name = "app";
    buildInputs = [ gcc link_mylib ];
    dontUnpack = true;
    objects = [
      app_main_c_o
    ];
    buildPhase = ''
      gcc $objects ${link_mylib}/libmylib.so -o "$out"
    '';
    installPhase = "true"; # No install needed
  };

  link_static_helper = stdenv.mkDerivation {
    name = "static_helper";
    buildInputs = [ gcc ];
    dontUnpack = true;
    objects = [
      static_helper_helper_c_o
    ];
    buildPhase = ''
      ar rcs "$out" $objects
    '';
    installPhase = "true"; # No install needed
  };

  link_mixed_app = stdenv.mkDerivation {
    name = "mixed_app";
    buildInputs = [ gcc link_mylib ];
    dontUnpack = true;
    objects = [
      mixed_app_mixed_c_o
    ];
    buildPhase = ''
      gcc $objects ${link_mylib}/libmylib.so ${link_static_helper} -o "$out"
    '';
    installPhase = "true"; # No install needed
  };


  # Install derivations
  link_mylib_install = stdenv.mkDerivation {
    name = "mylib-install";
    src = link_mylib;
    dontUnpack = true;
    dontBuild = true;
    dontConfigure = true;
    installPhase = ''
      mkdir -p $out/bin $out/lib $out/include
      cp -r $src/* $out/lib/ 2>/dev/null || true
    '';
  };

  link_versioned_lib_install = stdenv.mkDerivation {
    name = "versioned_lib-install";
    src = link_versioned_lib;
    dontUnpack = true;
    dontBuild = true;
    dontConfigure = true;
    installPhase = ''
      mkdir -p $out/bin $out/lib $out/include
      cp -r $src/* $out/lib/ 2>/dev/null || true
    '';
  };

  link_app_install = stdenv.mkDerivation {
    name = "app-install";
    src = link_app;
    dontUnpack = true;
    dontBuild = true;
    dontConfigure = true;
    installPhase = ''
      mkdir -p $out/bin $out/lib $out/include
      cp $src $out/bin/app
    '';
  };

  link_static_helper_install = stdenv.mkDerivation {
    name = "static_helper-install";
    src = link_static_helper;
    dontUnpack = true;
    dontBuild = true;
    dontConfigure = true;
    installPhase = ''
      mkdir -p $out/bin $out/lib $out/include
      cp $src $out/lib/libstatic_helper.a
    '';
  };

  link_mixed_app_install = stdenv.mkDerivation {
    name = "mixed_app-install";
    src = link_mixed_app;
    dontUnpack = true;
    dontBuild = true;
    dontConfigure = true;
    installPhase = ''
      mkdir -p $out/bin $out/lib $out/include
      cp $src $out/bin/mixed_app
    '';
  };

in
{
  "mylib" = link_mylib;
  "versioned_lib" = link_versioned_lib;
  "app" = link_app;
  "static_helper" = link_static_helper;
  "mixed_app" = link_mixed_app;
  "mylib_install" = link_mylib_install;
  "versioned_lib_install" = link_versioned_lib_install;
  "app_install" = link_app_install;
  "static_helper_install" = link_static_helper_install;
  "mixed_app_install" = link_mixed_app_install;
}
