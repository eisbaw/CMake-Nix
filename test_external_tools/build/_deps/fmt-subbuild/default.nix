# Generated by CMake Nix Generator
with import <nixpkgs> {};
with pkgs;
with lib;

let
# Helper functions for DRY derivations

  cmakeNixCC = {
    name,
    src,
    compiler ? gcc,
    flags ? "",
    source,  # Source file path relative to src
    buildInputs ? [],
    propagatedInputs ? []
  }: stdenv.mkDerivation {
    inherit name src buildInputs propagatedInputs;
    dontFixup = true;
    buildPhase = ''
      mkdir -p "$(dirname "$out")"
      # Determine compiler binary name based on the compiler derivation
      compilerBin="${
        if compiler == gcc then
          "gcc"
        else if compiler == clang then
          "clang"
        else if compiler == gfortran then
          "gfortran"
        else
          compiler.pname or "cc"
      }"
      # When src is a directory, Nix unpacks it into a subdirectory
      # We need to find the actual source file
      # Store source in a variable to handle paths with spaces
      sourceFile="${source}"
      # Check if source is an absolute path or Nix expression (e.g., $\{derivation}/file)
      if [[ "$sourceFile" == /* ]] || [[ "$sourceFile" == *"$"* ]]; then
        # Absolute path or Nix expression - use as-is
        srcFile="$sourceFile"
      elif [[ -f "$sourceFile" ]]; then
        srcFile="$sourceFile"
      elif [[ -f "$(basename "$src")/$sourceFile" ]]; then
        srcFile="$(basename "$src")/$sourceFile"
      else
        echo "Error: Cannot find source file $sourceFile"
        exit 1
      fi
      ${compiler}/bin/$compilerBin -c ${flags} "$srcFile" -o "$out"
    '';
    installPhase = "true";
  };

  # Linking helper function
  # NOTE: This uses Unix-style library naming conventions (lib*.a, lib*.so)
  # This is appropriate since Nix only runs on Unix-like systems (Linux, macOS)
  cmakeNixLD = {
    name,
    type ? "executable",  # "executable", "static", "shared", "module"
    objects,
    compiler ? gcc,
    compilerCommand ? null,  # Override compiler binary name (e.g., "g++" for C++)
    flags ? "",
    libraries ? [],
    buildInputs ? [],
    version ? null,
    soversion ? null,
    postBuildPhase ? ""
  }: stdenv.mkDerivation {
    inherit name objects buildInputs;
    dontUnpack = true;
    buildPhase =
      if type == "static" then ''
        # Unix static library: uses 'ar' to create lib*.a files
        mkdir -p "$(dirname "$out")"
        ar rcs "$out" $objects
      '' else if type == "shared" || type == "module" then ''
        mkdir -p $out
        compilerBin="${if compilerCommand != null then
          compilerCommand
        else if compiler == gcc then
          "gcc"
        else if compiler == clang then
          "clang"
        else if compiler == gfortran then
          "gfortran"
        else
          compiler.pname or "cc"
        }";
        # Unix library naming: static=lib*.a, shared=lib*.so, module=*.so
        libname="${if type == "module" then name else "lib" + name}.so"
        ${if version != null && type != "module" then ''
          libname="lib${name}.so.${version}"
        '' else ""}
        ${compiler}/bin/$compilerBin -shared $objects ${flags} ${lib.concatMapStringsSep " " (l: l) libraries} -o "$out/$libname"
        # Create version symlinks if needed (only for shared libraries, not modules)
        ${if version != null && type != "module" then ''
          ln -sf "$libname" "$out/lib${name}.so"
          ${if soversion != null then ''
            ln -sf "$libname" "$out/lib${name}.so.${soversion}"
          '' else ""}
        '' else ""}
      '' else ''
        mkdir -p "$(dirname "$out")"
        compilerBin="${if compilerCommand != null then
          compilerCommand
        else if compiler == gcc then
          "gcc"
        else if compiler == clang then
          "clang"
        else if compiler == gfortran then
          "gfortran"
        else
          compiler.pname or "cc"
        }";
        ${compiler}/bin/$compilerBin $objects ${flags} ${lib.concatMapStringsSep " " (l: l) libraries} -o "$out"
      '';
    inherit postBuildPhase;
    installPhase = "true";
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_mkdir_3592 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_mkdir_3592";
    buildInputs = [ pkgs.coreutils ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -Dcfgdir= -P /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/tmp/fmt-populate-mkdirs.cmake
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-mkdir
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-mkdir $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-mkdir
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_download_5882 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_download_5882";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_gitinfo_txt custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_mkdir ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_gitinfo_txt}/fmt-populate-gitinfo.txt .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_mkdir}/fmt-populate-mkdir .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/tmp/fmt-populate-gitclone.cmake
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-download
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-download $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-download
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update_7392 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update_7392";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_tmp_fmt_populate_gitupdate_cmake custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update_info_txt custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_download ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_tmp_fmt_populate_gitupdate_cmake}/fmt-populate-gitupdate.cmake .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update_info_txt}/fmt-populate-update-info.txt .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_download}/fmt-populate-download .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -Dcan_fetch=YES -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/tmp/fmt-populate-gitupdate.cmake
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-update $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-update
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch_9560 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch_9560";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch_info_txt custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch_info_txt}/fmt-populate-patch-info.txt .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update}/fmt-populate-update .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E echo_append
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-patch
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-patch $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-patch
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_configure_5805 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_configure_5805";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_tmp_fmt_populate_cfgcmd_txt custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_tmp_fmt_populate_cfgcmd_txt}/fmt-populate-cfgcmd.txt .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch}/fmt-populate-patch .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E echo_append
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-configure
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-configure $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-configure
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_build_2588 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_build_2588";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_configure ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_configure}/fmt-populate-configure .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E echo_append
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-build
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-build $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-build
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install_6269 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install_6269";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_build ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_build}/fmt-populate-build .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E echo_append
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-install
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-install $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-install
    '';
  };

  custom_CMakeFiles_fmt_populate_complete_7965 = stdenv.mkDerivation {
    name = "custom_CMakeFiles_fmt_populate_complete_7965";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_mkdir custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_download custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_configure custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_build custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_test ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install}/fmt-populate-install .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_mkdir}/fmt-populate-mkdir .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_download}/fmt-populate-download .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_update}/fmt-populate-update .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_patch}/fmt-populate-patch .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_configure}/fmt-populate-configure .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_build}/fmt-populate-build .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install}/fmt-populate-install .
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_test}/fmt-populate-test .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E make_directory /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/CMakeFiles
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/CMakeFiles/fmt-populate-complete
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-done
      mkdir -p $out/CMakeFiles
      cp fmt-populate-complete $out/CMakeFiles/fmt-populate-complete
    '';
  };

  custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_test_7704 = stdenv.mkDerivation {
    name = "custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_test_7704";
    buildInputs = [ pkgs.coreutils custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install ];
    phases = [ "buildPhase" ];
    buildPhase = ''
      mkdir -p $out
      cp ${custom_fmt_populate_prefix_src_fmt_populate_stamp_fmt_populate_install}/fmt-populate-install .
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E echo_append
      /home/mpedersen/topics/cmake_nix_backend/CMake/bin/cmake -E touch /home/mpedersen/topics/cmake_nix_backend/CMake/test_external_tools/build/_deps/fmt-subbuild/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-test
      mkdir -p $out/fmt-populate-prefix/src/fmt-populate-stamp
      cp fmt-populate-test $out/fmt-populate-prefix/src/fmt-populate-stamp/fmt-populate-test
    '';
  };

  custom_CMakeFiles_fmt_populate = stdenv.mkDerivation {
    name = "custom_CMakeFiles_fmt_populate";
    buildInputs = [ custom_CMakeFiles_fmt_populate_complete ];
    phases = [ "installPhase" ];
    installPhase = ''
      mkdir -p $out
      mkdir -p $out/CMakeFiles
      touch $out/CMakeFiles/fmt-populate
    '';
  };

# Per-translation-unit derivations

  # Linking derivations
in
{
}
